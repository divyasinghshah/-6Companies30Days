class Solution
{
    public:
    
    void dfs(vector<vector<int>> &grid,int i, int j,int n,int m, vector<vector<bool>> &visited, int &count){
        
        int rowN[]={-1,0,1,-1,1,-1,0,1};
        int colN[]={-1,-1,-1,0,0,1,1,1};
        
        
        visited[i][j]=true;
       
        for(int k=0;k<8;k++){
            int x=i+rowN[k];
            int y=j+colN[k];
            if(x>=0 && y>=0 && x<n && y<m && grid[x][y]==1 && !visited[x][y]){
                 count++;
                dfs(grid,x,y,n,m,visited,count);
            }
            
        }
    }
    //Function to find unit area of the largest region of 1s.
    int findMaxArea(vector<vector<int>>& grid) {
        // Code here
        int n=grid.size();
        int m=grid[0].size();
        vector<vector<bool>> visited(n,vector<bool>(m,false));
       
       
        
       int ans=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                
                if(grid[i][j]==1 && !visited[i][j]){
                   int count=1; 
                    dfs(grid,i,j,n,m,visited,count);
                    ans=max(ans,count);
                }
            }
        }
        return ans;
    }
};
